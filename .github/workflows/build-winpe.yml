name: Build Windows PE (amd64) ISO
on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download ADK and WinPE Add-on
        shell: pwsh
        run: |
          Write-Host "Downloading Windows ADK..."
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2289980" -OutFile "adksetup.exe"
          
          Write-Host "Downloading Windows PE add-on for the ADK..."
          Invoke-WebRequest -Uri "https://go.microsoft.com/fwlink/?linkid=2289981" -OutFile "adkwinpesetup.exe"

      # ... (This is your existing install step)
      - name: Install ADK and WinPE Add-on
        shell: pwsh
        run: |
          Write-Host "Installing Windows ADK (Deployment Tools only)..."
          Start-Process -FilePath "adksetup.exe" -Wait -ArgumentList "/quiet /norestart /features Feature_DeploymentTools"
          
          Write-Host "Installing Windows PE add-on..."
          Start-Process -FilePath "adkwinpesetup.exe" -Wait -ArgumentList "/quiet /norestart"

      # ADD THIS NEW STEP TO DUMP THE LOGS
      - name: Show ADK Install Logs
        if: always() # This ensures the step runs even if the previous one failed
        shell: pwsh
        run: |
          Write-Host "Searching for ADK installation logs..."
          $logFile = Get-ChildItem -Path $env:TEMP -Filter "ADK_*.log" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($logFile) {
            Write-Host "--- Displaying log file: $($logFile.FullName) ---"
            Get-Content -Path $logFile.FullName
            Write-Host "--- End of log file ---"
          } else {
            Write-Host "ADK log file not found in $env:TEMP."
          }

      - name: Find ADK Installation Path (Full Scan)
        shell: pwsh
        run: |
          Write-Host "Searching entire C: drive for DandISetEnv.bat..."
          Get-ChildItem -Path "C:\Program Files (x86)\Windows Kits" -Filter "DandISetEnv.bat" -Recurse -ErrorAction SilentlyContinue | Select-Object -ExpandProperty FullName

      - name: Create WinPE ISO (PowerShell)
        shell: pwsh
        run: |
          Write-Host "Setting up Deployment and Imaging Tools Environment..."
          # The PowerShell way to make tools available is to add their directory to the PATH.
          $adkToolsPath = "C:\Program Files (x86)\Windows Kits\10\Assessment and Deployment Kit\Deployment Tools"
          $env:Path = "$adkToolsPath;$env:Path"
          
          Write-Host "Creating WinPE working directory for amd64..."
          # PowerShell can execute .cmd files directly.
          copype.cmd amd64 C:\WinPE_amd64
          
          Write-Host "Creating WinPE ISO..."
          MakeWinPEMedia.cmd /iso C:\WinPE_amd64 C:\WinPE_amd64\WinPE_amd64.iso

      - name: Upload WinPE ISO Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WinPE-ISO-amd64
          path: C:\WinPE_amd64\WinPE_amd64.iso
